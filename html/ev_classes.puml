@startuml
title LegoMint System - Komponentenübersicht

' ===========================
' Akteure
' ===========================
actor Student
actor Teacher

' ===========================
' Web-Frontend (Aufgaben-Seiten)
' ===========================
package "Task Pages (html/*.html)" as TaskPages {
  [Task N HTML+JS\n(03_XXLegoEV3_I.html)]
}

' ===========================
' PHP Backend / App Layer
' ===========================
package "App (PHP)" as AppLayer {

  [login.php\n- prüft Credentials\n- startet Session] as Login
  [logout.php\n- beendet Session] as Logout

  [event_update.php\n- POST from JS sendEvent()\n- schreibt Fortschritt\n- loggt Events] as EventUpdate

  [update_status.php\n- Fortschritt speichern\n- user_task_status updaten] as UpdateStatus

  [my_status.php\n- Ansicht für Schüler\n- eigener Fortschritt] as MyStatus

  [teacher_overview.php\n- Ansicht für Lehrkräfte\n- alle Schüler/Tasks] as TeacherOverview
  [teacher_quick.php\n- schnelle Übersicht / Dashboard] as TeacherQuick

  [upload_users.php\n- CSV Import Schülerkonten] as UploadUsers

  [init_db.php\n- erstellt DB falls nötig\n- lädt Schema & Seed] as InitDB
}

' ===========================
' Datenbank / Persistence
' ===========================
database "SQLite (schule.db)" as DB {
  frame "Tables" {
    [users\n(id, student_number, name, role, password_hash)]
    [tasks\n(id, title, html_file)]
    [user_task_status\n(user_id, task_id, status,\nsim_ok, sim_at,\ndownload_ok, download_at,\nupdated_at)]
    [event_log\n(id, user_id, task_id, event,\ncreated_at)]
  }
}

' ===========================
' Hilfskomponente
' ===========================
[db.php\n- stellt PDO $pdo bereit\n- PRAGMA foreign_keys=ON] as DBPHP

' ===========================
' Beziehungen (Frontend -> Backend)
' ===========================
Student --> TaskPages : öffnet Seite\narbeitet an Aufgabe
TaskPages --> EventUpdate : fetch(\"event_update.php\",\n{task_id,event})
EventUpdate --> DBPHP
DBPHP --> DB

' ===========================
' Beziehungen (Statusanzeige Schüler)
' ===========================
Student --> MyStatus : ruft Statusseite
MyStatus --> DBPHP
DBPHP --> DB

' ===========================
' Beziehungen (Lehrerübersicht)
' ===========================
Teacher --> TeacherOverview
Teacher --> TeacherQuick
TeacherOverview --> DBPHP
TeacherQuick --> DBPHP
DBPHP --> DB

' ===========================
' Beziehungen (Auth)
' ===========================
Student --> Login : POST credentials
Teacher --> Login : POST credentials
Login --> DBPHP
DBPHP --> DB
Student --> Logout
Teacher --> Logout

' ===========================
' Beziehungen (User Import / Init)
' ===========================
Teacher --> UploadUsers : CSV hochladen
UploadUsers --> DBPHP
DBPHP --> DB

InitDB --> DBPHP
DBPHP --> DB

@enduml
